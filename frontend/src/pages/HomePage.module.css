.page {
  max-width: 960px;
  margin: 0 auto;
  padding: 2.5rem 1.5rem 4rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}

.header h1 {
  margin: 0 0 0.5rem;
  font-size: 2rem;
}

.header p {
  margin: 0;
  color: var(--color-text-muted);
}

.headerActions {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.settingsLink {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.75rem;
  background: var(--color-surface);
  color: var(--color-text);
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.2s ease;
  border: 1px solid var(--color-border);
  text-decoration: none;
}

.settingsLink svg {
  width: 1.25rem;
  height: 1.25rem;
}

.settingsLink:hover {
  background: var(--color-primary);
  color: white;
  transform: rotate(90deg);
}

.badge {
  padding: 0.35rem 0.75rem;
  border-radius: 999px;
  font-size: 0.85rem;
  font-weight: 600;
  background-color: var(--color-badge-bg);
  color: var(--color-badge-text);
}

.badgeLive {
  background-color: var(--color-badge-live-bg);
  color: var(--color-badge-live-text);
}

.badgeStarting {
  background-color: var(--color-badge-starting-bg);
  color: var(--color-badge-starting-text);
}

.badgeEnded {
  background-color: var(--color-badge-ended-bg);
}

.badgeError {
  background-color: var(--color-badge-error-bg);
  color: var(--color-badge-error-text);
}

.main {
  display: grid;
  gap: 1.5rem;
}

@media (min-width: 900px) {
  .main {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .main > :last-child {
    grid-column: 1 / -1;
  }
}

.fullWidthCard {
  grid-column: 1 / -1;
}

.card {
  background-color: var(--color-card-bg);
  border-radius: 1rem;
  box-shadow: var(--color-card-shadow);
  padding: 1.75rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.card h2 {
  margin: 0;
}

.card p {
  margin: 0;
  color: var(--color-text-muted);
}

.actions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.actions button {
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  border: none;
  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-alt));
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: opacity 0.2s ease;
}

.actions button:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.actions button:not(:disabled):hover {
  opacity: 0.85;
}

.speakerStatus {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.speakerPill {
  flex: 1 1 220px;
  background: #f1f5f9;
  border-radius: 0.875rem;
  padding: 0.75rem 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.speakerPillActive {
  box-shadow: 0 12px 30px -16px rgba(29, 78, 216, 0.45);
  transform: translateY(-2px);
  color: #0f172a;
}

.speakerPillUser {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(59, 130, 246, 0.3));
}

.speakerPillAi {
  background: linear-gradient(135deg, rgba(16, 185, 129, 0.15), rgba(16, 185, 129, 0.3));
}

.speakerMeta {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

.speakerLabel {
  font-weight: 600;
}

.speakerDescription {
  font-size: 0.8rem;
  color: #1f2937;
}

.voiceWave {
  display: flex;
  align-items: flex-end;
  gap: 0.25rem;
  height: 1.5rem;
}

.voiceWave span {
  display: block;
  width: 0.35rem;
  background: currentColor;
  border-radius: 999px;
  animation: wave 1.2s infinite ease-in-out;
  animation-play-state: paused;
  opacity: 0.3;
}

.voiceWave[data-active='true'] span {
  animation-play-state: running;
  opacity: 0.8;
}

.voiceWave span:nth-child(2) {
  animation-delay: 0.15s;
}

.voiceWave span:nth-child(3) {
  animation-delay: 0.3s;
}

@keyframes wave {
  0%,
  100% {
    height: 0.35rem;
  }
  50% {
    height: 1.2rem;
  }
}

.meta {
  font-size: 0.875rem;
  color: var(--color-meta);
}

.error {
  color: var(--color-error);
  font-weight: 600;
}

.errorPanel {
  background: #fef2f2;
  border-radius: 0.75rem;
  padding: 0.75rem 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  color: #991b1b;
}

.errorPanel button {
  align-self: flex-start;
  padding: 0.5rem 1rem;
  border-radius: 0.75rem;
  border: none;
  background: linear-gradient(135deg, #ef4444, #dc2626);
  color: white;
  font-weight: 600;
  cursor: pointer;
}

.errorPanel button:hover {
  opacity: 0.9;
}

.audio {
  width: 100%;
}

textarea {
  resize: vertical;
  min-height: 120px;
  padding: 0.75rem;
  border-radius: 0.75rem;
  border: 1px solid var(--color-border);
  background: var(--color-textarea-bg);
  color: var(--color-text);
  font-size: 0.95rem;
  font-family: inherit;
}

.transcript {
  background: var(--color-transcript-bg);
  padding: 1rem;
  border-radius: 0.75rem;
  max-height: 280px;
  overflow-y: auto;
  white-space: pre-wrap;
  font-size: 0.9rem;
}

.helper {
  font-size: 0.85rem;
  color: #2563eb;
  font-weight: 500;
}

.transcriptSkeleton {
  display: grid;
  gap: 0.5rem;
}

.transcriptSkeleton span {
  display: block;
  height: 0.75rem;
  border-radius: 999px;
  background: linear-gradient(90deg, #e2e8f0, #f8fafc, #e2e8f0);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

.transcriptSkeleton span:nth-child(2) {
  width: 90%;
}

.transcriptSkeleton span:nth-child(3) {
  width: 75%;
}

.scorePanel {
  background: var(--color-score-bg);
  border-radius: 0.75rem;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.scoreValue {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--color-primary-alt);
}

.settingsCard {
  position: relative;
}

@media (min-width: 900px) {
  .settingsCard {
    grid-column: 1 / -1;
  }
}

.exportActions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.secondaryButton {
  padding: 0.65rem 1.2rem;
  border-radius: 0.75rem;
  border: 1px solid #bfdbfe;
  background-color: #ffffff;
  color: #1d4ed8;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
}

.secondaryButton:hover {
  background-color: #dbeafe;
  transform: translateY(-1px);
}

.secondaryButton:active {
  transform: translateY(0);
}

.secondaryButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}
