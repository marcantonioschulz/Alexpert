services:
  db:
    image: postgres:16-alpine
    container_name: sales-simulation-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales_simulation
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - frontend

  backend:
    build:
      context: ./backend
    container_name: sales-simulation-backend
    depends_on:
      - db
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      APP_ENV: ${APP_ENV:-prod}
      PORT: ${PORT:-4000}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/sales_simulation}
      API_KEY: ${API_KEY:-super-secret-key}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-replace-me}
      REALTIME_MODEL: ${REALTIME_MODEL:-gpt-4o-realtime-preview}
      RESPONSES_MODEL: ${RESPONSES_MODEL:-gpt-4o-mini}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - '${PORT:-4000}:${PORT:-4000}'
    command: sh -c "npx prisma migrate deploy && node dist/server.js"
    networks:
      - frontend

  frontend:
    build:
      context: ./frontend
    container_name: sales-simulation-frontend
    depends_on:
      - backend
    environment:
      APP_ENV: ${APP_ENV:-prod}
      VITE_API_KEY: ${API_KEY:-super-secret-key}
      VITE_ALLOWED_HOSTS: ${VITE_ALLOWED_HOSTS:-localhost}
      VITE_BACKEND_URL: ${VITE_BACKEND_URL:-http://backend:4000}
      VITE_HOST: ${VITE_HOST:-0.0.0.0}
      VITE_PORT: ${VITE_PORT:-3000}
    ports:
      - '${VITE_PORT:-3000}:${VITE_PORT:-3000}'
    command: sh -c "npm ci && npm run build && npx serve -s dist"
    networks:
      - frontend

volumes:
  postgres_data:

networks:
  frontend:
    external: true
